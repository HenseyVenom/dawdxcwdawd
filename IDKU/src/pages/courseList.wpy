<style scoped lang='less'>
  .courseList{
   // position: relative;
    .courseTab{
      width:100%;
      height:100rpx;
      display:flex;
      justify-content:center;
      align-items:center;
      padding:0rpx 130rpx;
      position:absolute;
      top:0px;
      z-index: 100;
      background: #fff;
      .courseTabList{
        font-size:28rpx;
        color: #3A3A3A;
        display:flex;
        justify-content:center;
        align-items:center;
        width:50%;
        .touimages{
          width:20rpx;
          height:12rpx;
        }
        .tabname{
          margin-right:5rpx;
        }
        .active{
         color: #F23535;
        }

      }

    }
    .filter-content{
      position: absolute;
      width: 100%;
      top: 100rpx;
      left:0;
      z-index: 99;
      background: #fff;
      padding:0rpx 40rpx;
      max-height: 620rpx;
      overflow-y: overlay;
      .filter-term{
        display: flex;
        justify-content: space-between;
        align-items: center;
        border-bottom: 2rpx solid #ededed;
        padding: 30rpx 40rpx;
        font-size: 30rpx;
      }
      .filter-term {
        .courseNameActive{
          color: #F23535;
        }
        image{
          width: 35rpx;
          height: 25rpx;
        }

      }
    }
    .mask{
      width: 100%;
      height: 100%;
      position: fixed;
      top: 0;
      left: 0;
      z-index: 90;
      background-color:#000;
      opacity:0.3;
    }
    .tutorship{
      padding:0rpx 40rpx;
      margin-top:100rpx;
      .tutorship_List{
        box-shadow: 0 0 6px 0 rgba(213,213,213,0.50);
        background: #FFFFFF;
        border: 0 solid #979797;
        border-radius: 30rpx;
        padding:30rpx;
        margin-bottom: 40rpx;
        .flex-start{
          display: flex;
          justify-content: flex-start;
          align-items: center;
        }
        .flex-between{
          display: flex;
          justify-content: space-between;
          align-items: center;
        }
        .left image{
          width: 200rpx;
          height: 200rpx;
          border-radius: 10rpx;
          margin-right: 30rpx;
          display: block;
          background: #ccc;
        }
        .right{
          .courseName{
            font-size: 24rpx;
            margin-bottom: 14rpx;
            .grayText{
              color: #888888;
              font-size: 24rpx;
              padding-right: 10rpx;
              border-right: 1px solid #888888;
              margin-right: 10rpx;
              line-height: 24rpx;
              &:last-of-type{
                border-right: 0;
              }
            }
          }
          .text-gray{
            color: #888888;
          }
          .bg-pink{
            color: #fff;
            font-size: 22rpx;
            background: #F95E9F;
            border-radius: 15rpx;
            padding: 2rpx 8rpx;
            margin-right: 10rpx;
          }

          .price{
            margin: 10rpx 0;
            .font-14{
              font-size: 28rpx;
            }
            .font-20{
              font-size: 40rpx;
            }
            .text-pink{
              color: #fd83b6;
            }
            .delete-line{
              background: rgba(102,211,248,0.10);
              border: 2rpx solid #66D3F8;
              border-radius: 16rpx;
              font-size: 22rpx;
              color: #0A88B3;
              padding:0rpx 9rpx;
              display:inline-block;
              margin-left:6rpx;
              position:relative;
              top:-2rpx;
            }

          }
          .address{
            font-size: 24rpx;
            opacity: 0.7;
            view:first-of-type{
             width:290rpx;
              text-overflow: ellipsis;
              overflow: hidden;
              white-space: nowrap;
              color: #888;
            }
            image{
              width: 18rpx;
              height: 22rpx;
              position:relative;
              top:4rpx;
              margin-right:4rpx;
            }

          }


        }


      }
    }
    .empty{
      height: 90vh;
    }
  }
</style>
<template>
  <view class="courseList">

    <view class='mask' wx:if='{{checkedcount==1||checkedcount==2}}' @tap.stop='closeFilter'></view>
     <view class="flexR courseTab" >
        <view class="courseTabList" @tap="selecttab" wx:for="{{tablist}}" wx:for-item="tablists" wx:for-index="index" wx:key="index" data-value="{{tablists.value}}">
          <text class="tabname {{checkedcount==tablists.value ? 'active':''}}">{{tablists.name}}</text>
          <image src="/images/checkedtou.png" class="touimages" wx:if="{{checkedcount == tablists.value}}"></image>
          <image src="/images/closeicon.png" class="touimages" wx:if="{{checkedcount!=tablists.value}}"></image>
        </view>
     </view>
     <view class='filter-content' wx:if='{{checkedcount==1}}'>
        <view @tap='checkItem' wx:for='{{lessonArr}}' wx:for-item="item" wx:key="i" wx:for-index="i"  data-num='{{i}}' wx:if="{{item.name}}">
          <view class='filter-term' @tap.stop="selectedType({{i}})">
            <text class="{{clientType == i ?'courseNameActive':''}}">{{item.name}}</text>
            <image wx:if='{{clientType==i}}' src='/images/checked.png'></image>
          </view>
        </view>
     </view>
    <view class='filter-content' wx:if='{{checkedcount==2}}'>
      <view @tap='checkItem' wx:for='{{orderArr}}' wx:for-item="item" wx:key="i" wx:for-index="i"  data-num='{{i}}'>
        <view class='filter-term' @tap.stop="selectAge({{i}})">
          <text class="{{ordertype ==i ?'courseNameActive':''}}">{{item.name}}</text>
          <image wx:if='{{ordertype == i}}' src='/images/checked.png'></image>
        </view>
      </view>
    </view>


     <view class="tutorship">
       <view class='tutorship_List' catchtap='enterDeatil' wx:for="{{courseListArr}}" wx:key="index" @tap.stop="clickCourse({{item}})">
         <view class='flex-start'>
           <view class='left'>
             <image src='{{item.logoUrl}}'></image>
           </view>
           <view class='right'>
             <view class='courseName text-gray'>
               <text class="grayText" wx:if="{{item.courseTagName}}">{{item.courseTagName}}</text>
               <text class="grayText" wx:if="{{item.ageTime}}">{{item.ageTime}}岁</text>
               <text class="grayText" wx:if="{{item.isOpenRegistration}}">免费试听</text>
             </view>
             <view class='flex-start'>
               <text style='font-size: 28rpx;color: #121212;'>{{item.name}}</text>
             </view>
             <view class='price'>
               <text class='font-14 text-pink'>￥</text>
               <text class='font-20 text-pink'>{{item.price}}</text>
               <text class='delete-line' wx:if="{{false}}">免息分期</text>
             </view>
             <view class='address flex-between'>
               <view><image src='/images/addressicon.png'></image>{{item.address}}</view>
               <text wx:if="{{item.distance}}"><text style='color:#cdcdcd'>|</text> {{item.distance}}</text>
             </view>
           </view>
         </view>
       </view>
     </view>
    <emptyView wx:if="{{courseListArr.length==0}}" class="empty"></emptyView>

  </view>
</template>
<script>
  import wepy from 'wepy'
  import {pRequest,pGetRequest} from "../utils/requestUtils";
  import { connect } from 'wepy-redux'
  import emptyView from '../components/emptyView'
  const app=wepy.$instance
  @connect({
    shopId (state) {
      return state.counter.shopId
    }
  })
  export default class courseList extends wepy.page {
    //页面配置
    config = {
      "navigationBarTitleText": "课程列表",
       "enablePullDownRefresh":true
    };
    data = {
      tablist:[
            {
            'name':'课程类别',
              value:1
            },
            {
            name:'所有年龄',
             value:2
            }
        ],
      clientType:-1,//选中课程的列表
      ordertype:'',//选中年龄的列表
      checkedcount:0,
      lessonArr:[
        {name:'早教',
         id:'1234346'
        },
        {name:'早教',
         id:'1347346'
        }],
      orderArr:[{
        name:"所有年龄",
      }, {
        name:"0-3周岁",
        ageStart:0,
        ageEnd:3,
      }, {
        name:"4-6周岁",
        ageStart:4,
        ageEnd:6
      }, {
        name:"7-10周岁",
        ageStart:7,
        ageEnd:10
      }, {
        name:"11-13周岁",
        ageStart:11,
        ageEnd:13
      }, {
        name:"14-18周岁",
        ageStart:14,
        ageEnd:18
      }],
      courseListArr:[],
      courseListpage:{},
      page:app.isUseSaas()?{
        pageNum:1,
        pageSize:10,
        addPage(){
          this.pageNum++
        },
        refreshPage(){
          this.pageNum==1
        }
      }:{
        page:0,
        size:10,
        addPage(){
          this.page++
        },
        refreshPage(){
          this.page==1
        },
      },
      isloading:false,

    }
    components={
      emptyView
    }
    methods={
      checkItem(e){
        if(this.checkedcount==1){
          this.clientType = e.currentTarget.dataset.num
        }else if(this.checkedcount==2){
          this.ordertype = e.currentTarget.dataset.num
        }
      },
      selecttab(e){
        if (this.checkedcount == e.currentTarget.dataset.value) {
          this.checkedcount = 0
        } else {
          this.checkedcount = e.currentTarget.dataset.value
        }
      },
      closeFilter(){
        this.checkedcount = 0
      },
      selectAge(age){
        this.ordertype=age;
        this.checkedcount=0
        this.refresh()
      },
      selectedType(i){
        this.clientType=i;
        this.checkedcount=0
        this.refresh()
      },
      clickCourse(item){
        wx.navigateTo({
          url:'/pages/courseDetail?id='+item.id
        })
      }
    }

    onLoad(){
      this.getCourseType()
      this.refresh()
    }

    refresh(){
      if(this.isLoading){
        return
      }
      this.page.refreshPage()
      this.getPageList()
    }
    loadmore(){
      console.log('loadmore')
      if(this.isLoading){
        return
      }
      if(this.isNoMore()){
        return
      }
      this.page.addPage()
      this.getPageList()
    }
    isNoMore(){
      var isNoMore=false
      var needShowLoadMore=true
      if (app.isUseSaas()) {
        if(this.page.pageCount == this.page.pageNo){
          isNoMore=true
          needShowLoadMore=this.page.pageCount>0
        }
      }else{
        if(this.page.page >= (this.page.pageTotal-1)){
          isNoMore = true
          needShowLoadMore=this.page.pageTotal>0
        }
      }
      if(isNoMore&&needShowLoadMore){
        if (this.page.pageTotal != 0 || this.page.pageCount != 0) {
          wx.showToast({
            title: '没有更多了',
            icon: 'none'
          })
        }
      }
      return isNoMore
    }

    getPageList(){
      this.isLoading=true
      if (app.isUseSaas()) {
        this.getCourseListFromZX()
      }else{
        var url='xb/front/unAuth/organShop/shopCourse/list?page='+this.page.page+"&size="+this.page.size+"&shop_id="+this.shopId
        if(this.clientType>=0){
          url+='&attribute='+this.lessonArr[this.clientType].name
        }
        if(this.ordertype>0){
          url+='&ageStart='+this.orderArr[this.ordertype].ageStart+"&ageEnd="+this.orderArr[this.ordertype].ageEnd
        }
        pRequest(url).then((res)=>{
          wx.stopPullDownRefresh()
          this.isLoading=false
          console.log("res:",res)
          this.page.pageTotal=res.totalPages
          this.page.page=res.number
          if(res.number==0){
            this.courseListArr=convertCourseListFromXB(res.content)
          }else{
            this.courseListArr=this.courseListArr.concat(convertCourseListFromXB(res.content))
          }
          this.$apply()
        }).catch((err)=>{
          wx.stopPullDownRefresh()
          this.isLoading=false
        })
      }
    }

    onPullDownRefresh() {
      this.refresh()
     // this.courseListArr=[]
     //  this.page.pageNum = 1
     //  this.getCouseList()
    }
    onReachBottom(event) {
      this.loadmore()
      // if(this.courseListpage.totalPage <= this.page.pageNum){
      //   return
      // }
      // this.page.pageNum++
      // this.getCouseList()
    }

    getCourseListFromZX(){
      wx.showLoading({
        title: '加载中',
      })
      pRequest('com/package/list', {
        page: this.page
      }).then((res)=>{
        wx.stopPullDownRefresh()
        this.isLoading=false
        this.courseListArr = this.courseListArr.concat(res.list)
        this.courseListpage = res.page
        this.$apply();
      }).catch((err)=>{
        wx.stopPullDownRefresh()
        this.isLoading=false
      })
    }

    getCourseType(){
      pGetRequest('xb/front/unAuth/home/tagList?type=shop').then((res)=>{
        this.lessonArr=res
        this.$apply()
      })
    }
  }
  function convertCourseListFromXB(list) {
    if(!list)return[]
    return list.map((item)=>{
      item.ageTime=item.ageStart+'-'+item.ageEnd
      return item
    })
  }
</script>
